name: Auto Backport Master to Develop

on:
  push:
    branches: [ master ]

permissions:
  contents: write
  pull-requests: write

jobs:
  backport:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}
    
    - name: Setup Git for push
      run: |
        git config --global user.name "Auto Backport Bot"
        git config --global user.email "bot@rutaslogisticas.com"
        git remote set-url origin https://x-access-token:${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
    
    - name: Auto Backport to Develop
      run: |
        echo "Iniciando backport automatico de master a develop..."
        
        # Obtener informacion del commit
        COMMIT_SHA=$(git rev-parse HEAD)
        COMMIT_TITLE=$(git log -1 --pretty=format:"%s")
        COMMIT_AUTHOR=$(git log -1 --pretty=format:"%an")
        
        echo "Commit: $COMMIT_TITLE"
        echo "Autor: $COMMIT_AUTHOR"
        echo "SHA: $COMMIT_SHA"
        
        # Cambiar a develop y actualizar
        echo "Cambiando a rama develop..."
        git checkout develop
        git pull origin develop
        
        # Resetear develop para que sea exactamente igual a master
        echo "Sincronizando develop con master..."
        git reset --hard master
        
        # Push del backport
        echo "Sincronizacion exitosa, haciendo push a develop..."
        git push --force-with-lease origin develop
        
        echo "Backport completado exitosamente!"
        echo "master y develop estan perfectamente sincronizados"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Notification
      if: always()
      run: |
        echo "Proceso de backport completado"
        echo "Estado: ${{ job.status }}"